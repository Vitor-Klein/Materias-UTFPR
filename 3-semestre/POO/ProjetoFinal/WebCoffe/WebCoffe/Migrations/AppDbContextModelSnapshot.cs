// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCoffe.Data;

#nullable disable

namespace WebCoffe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("WebCoffe.Models.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TempoPreparo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Receitas");

                    b.HasDiscriminator<string>("Tipo").HasValue("Receita");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("WebCoffe.Models.Cafe", b =>
                {
                    b.HasBaseType("WebCoffe.Models.Receita");

                    b.Property<string>("Torragem")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Café");
                });

            modelBuilder.Entity("WebCoffe.Models.Cha", b =>
                {
                    b.HasBaseType("WebCoffe.Models.Receita");

                    b.Property<string>("TipoFolha")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Chá");
                });
#pragma warning restore 612, 618
        }
    }
}
